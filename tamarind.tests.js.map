{"version":3,"sources":["test/EventEmitter.tests.coffee","test/ShaderEditor.tests.coffee","test/WebGLCanvas.tests.coffee"],"names":[],"mappings":"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","file":"build/tamarind.tests.js","sourcesContent":["'use strict'\n\nclass Call\n  @spy = ->\n    call = new Call\n    spyOn(call, 'back')\n    return call\n  back: ->\n\n\ndescribe 'EventEmitter', ->\n\n  it 'should register callbacks with the off() method', ->\n    ee = new EventEmitter\n    call1 = Call.spy()\n    call2 = Call.spy()\n    call3 = Call.spy()\n    ee.on 'foo', call1.back\n    ee.on 'foo', call2.back\n    ee.on 'bar', call3.back\n    ee.emit 'foo', 100\n    expect(call1.back).toHaveBeenCalledWith 100\n    expect(call2.back).toHaveBeenCalledWith 100\n    expect(call3.back).not.toHaveBeenCalledWith 100\n\n    return\n\n  it 'should deregister callbacks with the off() method', ->\n    ee = new EventEmitter\n    call1 = Call.spy()\n    call2 = Call.spy()\n    ee.on 'foo', call1.back\n    ee.on 'foo', call2.back\n    ee.off 'foo', call2.back\n    ee.emit 'foo'\n\n    expect(call1.back).toHaveBeenCalled()\n    expect(call2.back).not.toHaveBeenCalled()\n\n    return\n\n  it 'should a callback to be registered multiple times without multiple calls', ->\n    ee = new EventEmitter\n    call1 = Call.spy()\n    ee.on 'foo', call1.back\n    ee.on 'foo', call1.back\n    ee.emit 'foo'\n\n    expect(call1.back.calls.count()).toEqual 1\n\n    return\n\n\n  it 'should throw an error when passed arguments of the wrong type', ->\n    ee = new EventEmitter\n    callback = ->\n    ee.on 'foo', callback\n    expect(-> ee.on 3, callback).toThrowError()\n    expect(-> ee.on null, callback).toThrowError()\n    expect(-> ee.on 'foo').toThrowError()\n    expect(-> ee.on 'foo', null).toThrowError()\n    expect(-> ee.on 'foo', 5).toThrowError()\n\n    ee.emit 'foo'\n    ee.emit 'foo', 4\n    expect(-> ee.emit null).toThrowError()\n    expect(-> ee.emit 4).toThrowError()\n\n    ee.off 'foo', callback\n    ee.off 'bar', callback\n    expect(-> ee.off 4, callback).toThrowError()\n    expect(-> ee.off 'bar', null).toThrowError()\n\n    return\n\n  return\n","\n\n\ndescribe 'mergeObjects', ->\n\n  it 'should should recursively copy values from source to dest', ->\n\n    source =\n      a: 'foo'\n      b:\n        c: 'lala'\n\n\n    dest =\n      a: '1'\n      b:\n        c: '2'\n        f: '3'\n      d: null\n\n    mergeObjects source, dest\n\n    expect(dest.a).toEqual 'foo'\n    expect(dest.b.c).toEqual 'lala'\n    expect(dest.b.f).toEqual '3'\n    expect(dest.d).toEqual null\n\n    expect(-> mergeObjects(notThere: 4, dest)).toThrow(new Error(\"Can't merge property 'notThere': source is number destination is undefined\"))\n    expect(-> mergeObjects(b: 4, dest)).toThrow(new Error(\"Can't merge property 'b': source is number destination is object\"))\n\n    return\n\n  return\n","\nVSHADER_HEADER = '''\nattribute float a_VertexIndex;\n'''\n\nFSHADER_HEADER = '''\nprecision mediump float;\nuniform vec2 u_CanvasSize;\n'''\n\ncompareAgainstReferenceImage = (webglCanvas, referenceImageUrl, done) ->\n\n  imageToDataUrl = (imageElement) ->\n    canvasElement = document.createElement 'canvas'\n    canvasElement.width = imageElement.width\n    canvasElement.height = imageElement.height\n    ctx = canvasElement.getContext '2d'\n    ctx.drawImage(imageElement, 0, 0)\n    return canvasElement.toDataURL('image/png')\n\n  loaded = 0\n\n  handleLoad = ->\n    ++loaded\n    if loaded is 2\n      expectedData = imageToDataUrl(expected)\n      actualData = imageToDataUrl(actual)\n      unless expectedData is actualData\n        window.focus()\n        console.log 'EXPECTED DATA: ' + expectedData\n        console.log 'ACTUAL DATA: ' + actualData\n        unless document.location.href.indexOf('bad-images') is -1\n          window.open expectedData\n          window.open actualData\n        else\n          console.log 'PRO TIP: append ?bad-images to the Karma runner URL and reload to view these images'\n        expect(false).toBeTruthy()\n      done()\n    return\n\n  actual = new Image()\n  actual.onload = handleLoad\n  actual.src = webglCanvas.captureImage(100, 100)\n\n  expected = new Image()\n  expected.onload = handleLoad\n  expected.onerror = -> throw new Error(\"Couldn't load \" + referenceImageUrl)\n  expected.src = referenceImageUrl\n\n  return\n\n\ndescribe 'WebGLCanvas', ->\n\n  oldError = console.error\n\n  beforeEach ->\n    console.error = (message) ->\n      unless message is 'this error is expected'\n        oldError.call(console, message)\n      throw new Error(message)\n\n    return\n\n  afterEach ->\n    console.error = oldError\n    return\n\n  it 'should throw an exception on console errors', ->\n    expect(-> console.error('this error is expected')).toThrow(new Error('this error is expected'))\n    return\n\n  it 'should render a test image', (done) ->\n\n    canvas = new WebGLCanvas(document.createElement('canvas'), true)\n\n    canvas.vertexShaderSource = VSHADER_HEADER + '''\n      void main() {\n        // 4 points, one in each corner, clockwise from top left\n        if (a_VertexIndex == 0.0) {\n          gl_Position.xy = vec2(-1, -1);\n        } else if (a_VertexIndex == 1.0) {\n          gl_Position.xy = vec2(1, -1);\n        } else if (a_VertexIndex == 2.0) {\n          gl_Position.xy = vec2(1, 1);\n        } else if (a_VertexIndex == 3.0) {\n          gl_Position.xy = vec2(-1, 1);\n        }\n      }\n    '''\n\n    canvas.fragmentShaderSource = FSHADER_HEADER + '''\n      void main() {\n        gl_FragColor = vec4(gl_FragCoord.xy / u_CanvasSize, 1, 1);\n      }\n    '''\n\n    compareAgainstReferenceImage canvas, '/base/build/test/reference-images/plain-shader.png', done\n\n    return\n\n  it 'test image rendering should work even if the scene is invalid', ->\n\n    canvas = new WebGLCanvas(document.createElement('canvas'), true)\n\n    canvas.vertexShaderSource = VSHADER_HEADER + '''\n      void main() {\n        blarty foo\n      }\n    '''\n\n    canvas.fragmentShaderSource = FSHADER_HEADER + '''\n      void main() {\n        gl_FragColor = nark;\n      }\n    '''\n\n\n    image = canvas.captureImage(100, 100)\n    expect(image).toContain('image/png')\n\n    return\n\n  expectErrorCountFromSource = (done, expectedErrorLines, fragmentShaderSource) ->\n\n    canvas = new WebGLCanvas(document.createElement('canvas'))\n\n    canvas.fragmentShaderSource = fragmentShaderSource\n\n    canvas.on WebGLCanvas.COMPILE, (event) ->\n      if event.shaderType is Tamarind.FRAGMENT_SHADER\n        actualErrorLines = (err.line for err in event.errors)\n        expect(actualErrorLines).toEqual(expectedErrorLines)\n        done()\n\n      return\n\n    return\n\n  it 'should dispatch CompileStatus events on sucessful compilation', (done) ->\n\n    expectErrorCountFromSource done, [], FSHADER_HEADER + '''\n      void main() {\n        gl_FragColor = vec4(gl_FragCoord.xy / u_CanvasSize, 1, 1);\n      }\n    '''\n\n    return\n\n  it 'should have one error if there is a syntax problem', (done) ->\n\n    expectErrorCountFromSource done, [2],  FSHADER_HEADER + '''\n      void main() {\n        gl_FragColor vec4(gl_FragCoord.xy / u_CanvasSize, 1, 1); // error: missing equals\n      }\n    '''\n\n    return\n\n  it 'should have multiple errors if there are multiple validation problems', (done) ->\n\n    expectErrorCountFromSource done, [2, 4],  FSHADER_HEADER + '''\n      void main() {\n        foo = 1.0; // first error\n        gl_FragColor = vec4(gl_FragCoord.xy / u_CanvasSize, 1, 1);\n        bar = 2.0; // second error\n      }\n    '''\n\n    return\n\n  it 'should dispatch a link event on sucessful linking', (done) ->\n\n    canvas = new WebGLCanvas(document.createElement('canvas'), true)\n\n    canvas.fragmentShaderSource = FSHADER_HEADER + '''\n      void main() {\n        gl_FragColor = vec4(gl_FragCoord.xy / u_CanvasSize, 1, 1);\n      }\n    '''\n    canvas.vertexShaderSource = VSHADER_HEADER + '''\n      void main() {\n        gl_Position = vec4(0);\n      }\n    '''\n\n    canvas.on WebGLCanvas.LINK, (error) ->\n      expect(error).toBeFalsy()\n      done()\n\n      return\n\n    return\n\n  it 'should dispatch a link error message event on failed linking', (done) ->\n\n    canvas = new WebGLCanvas(document.createElement('canvas'), true)\n\n    canvas.fragmentShaderSource = FSHADER_HEADER + '''\n      varying vec4 doesntExist; // not present in vertex shader, that's a link error\n      void main() {\n        gl_FragColor = doesntExist;\n      }\n    '''\n    canvas.vertexShaderSource = VSHADER_HEADER + '''\n      void main() {\n        gl_Position = vec4(0);\n      }\n    '''\n\n    canvas.on WebGLCanvas.LINK, (error) ->\n      expect(error).toContain('doesntExist')\n      done()\n\n      return\n\n    return\n\n\n  return\n\n\n\n\n\n\n\n"]}